module stimulus;

parameter T = 20;

reg [31:0] dataIn;
reg [1:0] opsel, outsel;
reg [4:0] addressA, addressB;
reg asel, bsel, oen, clk;

wire [31:0] outPut;
wire over;


integer handle3,desc3;

// Instantiate the design block counter
cpu proj(addressA, addressB, dataIn, asel,bsel, clk, opsel, outsel, oen, outPut, over);
initial
begin
clk = 1'b1;
forever #T  clk = ~clk;
end

initial
 begin
handle3 = $fopen ("stim_proj.out");
  $shm_open("shm.db",1);
  $shm_probe(stimulus,"AS");
  #500  $shm_close();
  #1 $finish;
  end


always
begin
desc3=handle3;
#1 $fdisplay(desc3, $time,"clk=%b, addressA=%d, addressB=%d, dataIn=%d, opsel=%d, outsel=%d, asel=%d, bsel=%d, oen=%d, OUT=%d", clk, addressA, addressB, dataIn, opsel, outsel,asel, bsel, oen, outPut);

end

 // Stimulate the Input Signals
initial
 begin

// 1. store (5) in [0]

#T

addressA = 5'b00000;

addressB = 5'b00000;

dataIn = 32'h0000_005;  // 5 Hexadecimal value : 0000_0005

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;


#(T*2)


// 2. store (2863311531) in [1]

addressA=5'b00000;

addressB= 5'b00001;

dataIn = 32'hAAAA_AAAB;  //  2863311531 Hexadecimal value : AAAA_AAAB

opsel = 2'b01;

outsel = 2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)

// 3. store 1431655765 in [2]

addressA = 5'b00000;

addressB = 5'b00010;

dataIn = 32'h5555_5555;  // 1431655765 Hexadecimal value :5555_5555

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;



#(T*2)

// 4. store 52 in [3]

addressA = 5'b00000;

addressB = 5'b00011; //3 in binary

dataIn = 32'h0000_000B;   //11 Hexadecimal value :0000_000B

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;
#(T*2)

// 5. store 10 in [4]

addressA = 5'b00000;

addressB = 5'b00100; //4 in binary

dataIn = 32'h0000_000A;   //10 Hexadecimal value :0000_000A

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;
#(T*2)
// 6. store 4294967295 in [5]

addressA = 5'b00000;

addressB = 5'b00101; //5 in binary

dataIn = 32'hFFFF_FFFF;   //4294967295 Hexadecimal value :FFFF_FFFF

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;
#(T*2)
// 7. store 200 in [6]

addressA = 5'b00000;

addressB = 5'b00110; //6 in binary

dataIn = 32'h0000_00C8;   //200 Hexadecimal value :0000_00C8

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)
// 8. store 300 in [7]

addressA = 5'b00000;

addressB = 5'b00111; //7 in binary

dataIn = 32'h0000_012C;   //300 Hexadecimal value :0000_012C

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)
// 9. store 300 in [8]

addressA = 5'b00000;

addressB = 5'b01000; //8 in binary

dataIn = 32'h0000_0001;   //1 Hexadecimal value :0000_0001

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)
// 10. store 2863311526 in [9]

addressA = 5'b00000;

addressB = 5'b01001; //9 in binary

dataIn = 32'hAAAA_AAA6;   //2863311526 Hexadecimal value :AAAA_AAA6

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)
// 11. store 1431655771 in [10]

addressA = 5'b00000;

addressB = 5'b01010; //10 in binary

dataIn = 32'h5555_555B;   //1431655771 Hexadecimal value :5555_555B

opsel = 2'b01;

outsel =2'b00;

asel = 0;

bsel = 0;

oen = 1;

#(T*2)

//12. ADD     [2][0] 1431655765+5=1431655770  5555_555A

addressA = 5'd2;

addressB = 5'd0;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)
//13. ADD     [1][2] 2863311531+1431655765=4294967296 7FFF_FFFF

addressA = 5'd1;

addressB = 5'd2;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)

//14. ADD      [6][7] = 200+300 =500   0000_01F4
addressA = 5'd6;

addressB = 5'd7;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)
//15. ADD      [5][8] = 4294967295+1 =4294967296   7FFF_FFFF
addressA = 5'd5;

addressB = 5'd8;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)
//16. SUB      [2][3] = 1431655765-11 =1431655754   5555_554A
addressA = 5'd2;

addressB = 5'd3;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)

//17. READ     [0] = 0000_0005
addressA = 5'd0;

addressB = 5'd0;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b00;

asel = 1;

bsel = 0;

oen = 1;

#(T*2)

//18. READ     [3] = 0000_000B
addressA = 5'd3;

addressB = 5'd3;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b00;

asel = 1;

bsel = 0;

oen = 1;

#(T*2)
//19. READ     [7] = 0000_012C
addressA = 5'd7;

addressB = 5'd7;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b00;

asel = 1;

bsel = 0;

oen = 1;

#(T*2)
//20. ADD      [3][10] = 11+1431655771 =1431655782  5555_5566
addressA = 5'd3;

addressB = 5'd10;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)

//21. SUB      [4][7] = 10-300 =-290   FFFF_FEDE
addressA = 5'd4;

addressB = 5'd7;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)
//22. ADD      [0][8] = 5+1 =6  0000_0006
addressA = 5'd0;

addressB = 5'd8;

dataIn = 32'd0;

opsel = 2'b00;

outsel =2'b01;

asel = 1;

bsel = 1;

oen = 1;

#(T*2)
//23. READ     [7] = 0000_012C
addressA = 5'd7;

addressB = 5'd7;

dataIn = 32'd0;

opsel = 2'b01;

outsel =2'b00;

asel = 1;

bsel = 0;

oen = 1;

end
endmodule
